trigger:
  branches:
    include:
      - main
  paths:
    include:
      - client/**

pr:
  branches:
    include:
      - main
  paths:
    include:
      - client/**

pool:
  name: ArmPool

variables:
  npm_config_cache: $(Pipeline.Workspace)/.npm

stages:
  - stage: Test
    displayName: Test
    jobs:
      - job: TestJob
        steps:
          - task: Cache@2
            displayName: Cache NPM packages
            inputs:
              key: './client/package-lock.json'
              path: '$(npm_config_cache)'
          - task: Bash@3
            displayName: Clean Install
            inputs:
              targetType: "inline"
              script: "npm ci --cache $(npm_config_cache)"
              workingDirectory: "$(System.DefaultWorkingDirectory)/client"
          - task: Bash@3
            displayName: Run Tests
            inputs:
              targetType: "inline"
              script: "CI=true npm test"
              workingDirectory: "$(System.DefaultWorkingDirectory)/client"

  - stage: Build For PR
    displayName: Build For Pull Request
    condition: ne(variables['Build.SourceBranch'], 'refs/heads/main')
    jobs:
      - job: BuildJob
        steps:
        - task: Docker@2
          inputs:
            containerRegistry: 'dockerhub-ahmedavid'
            repository: 'ahmedavid/notedown-react'
            command: 'build'
            Dockerfile: '**/Dockerfile'
            buildContext: 'client'
            tags: |
              $(Build.BuildId)
              latest

  - stage: BuildAndPush
    displayName: Build and Push Docker image
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
    jobs:
      - job: BuildJob
        steps:
        - task: Docker@2

          inputs:
            containerRegistry: 'dockerhub-ahmedavid'
            repository: 'ahmedavid/notedown-react'
            command: 'buildAndPush'
            Dockerfile: '**/Dockerfile'
            buildContext: 'client'
            tags: |
              $(Build.BuildId)
              latest

  - stage: Publish
    displayName: Publish
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
    jobs:
      - job: ReplaceTag
        steps:
        - task: Bash@3
          inputs:
            targetType: 'inline'
            script: |
              sed -i 's#ahmedavid/notedown-react:latest#ahmedavid/notedown-react:$(Build.BuildId)#' ./infra/app/client.yaml
            workingDirectory: '$(System.DefaultWorkingDirectory)'
        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: "$(System.DefaultWorkingDirectory)/infra/app"
            artifact: "notedown-kube-manifests"
            publishLocation: "pipeline"